# Pipeline / workflow for ATU assignment

name: ATU-Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows to run manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build and deploy code
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Sequence of tasks that will be executed as part of the job
    steps:
      - name: Code checkout
        # Checks-out your repository under $GITHUB_WORKSPACE, so job can access it
        uses: actions/checkout@v3
      - name: Java setup
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '21'
          
      - name: Set project name
        id: project_name
        run: echo "::set-output name=name::$(basename -s .git $GITHUB_REPOSITORY)"
      
      - name: Unit tests
        run: mvn -B test --file pom.xml

      - name: Build app
        run: mvn -B prepare-package --file pom.xml

      - name: Install Snyk CLI
        run: |
         curl -L https://npmjs.org/install.sh | sudo sh
          sudo npm install -g snyk

      - name: Run Snyk Test
        run: snyk test --json > snyk-test-results.json || snyk test --print-deps" || true

      - name: Display Test Results
        run: cat snyk-test-results.json

      - name: Dependency check
        run: mvn org.owasp:dependency-check-maven:8.3.1:check -DskipDependencyManagement=false
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.1.0
        with:
         context: .
         push: false
         tags: "${{ secrets.DOCKER_HUB_USERNAME }}/pipeline:latest"
         
      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v5.1.0
        with:
          push: true
          tags: "${{ secrets.DOCKER_HUB_USERNAME }}/pipeline:latest"

      - name: Pull Docker Image
        run: docker pull tecnomancer1/pipeline:latest

      - name: Run Container
        run: docker run -p 8080:8080 -d tecnomancer1/pipeline:latest

      - name: List Running Containers
        run: docker ps

      - name: Run Functional Tests
        run: |
          # Adjust this command based on how you run your functional tests
          mvn test -Dtest=HelloWorldFunctional -Dmaven.test.failure.ignore=true

      

      
